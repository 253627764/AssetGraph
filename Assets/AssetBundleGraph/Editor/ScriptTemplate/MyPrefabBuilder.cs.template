using UnityEngine;
using UnityEditor;

using System;
using System.Collections.Generic;

using AssetBundleGraph;

[AssetBundleGraph.CustomPrefabBuilder("MyBuilder")]
public class MyPrefabBuilder : IPrefabBuilder {

	[SerializeField] private bool doSomething;

	/**
	 * Test if prefab can be created with incoming assets.
	 */ 
	public bool CanCreatePrefab (string groupKey, List<Asset> assets) {
		return false;
	}

	/**
	 * Create Prefab.
	 */ 
	public List<Asset> CreatePrefab (string groupKey, List<Asset> assets, string prefabSaveDir, bool isBuild) {
		var builtAssets = new List<Asset>();

		return builtAssets;
	}

	/**
	 * Draw Inspector GUI for this PrefabBuilder.
	 */ 
	public void OnInspectorGUI (Action onValueChanged) {

		GUILayout.Label("My Builder Inspector");

		var newValue = GUILayout.Toggle(doSomething, "Do Something");
		if(newValue != doSomething) {
			doSomething = newValue;
			onValueChanged();
		}
	}

	/**
	 * Serialize this PrefabBuilder to JSON using JsonUtility.
	 */ 
	public string Serialize() {
		return JsonUtility.ToJson(this);
	}
}
